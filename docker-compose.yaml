version: '3.8'

services:
  mysqldb:
    image: mysql
    restart: always
    container_name: mysql-server
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    ports:
      - $MYSQL_LOCAL_PORT:$MYSQL_DOCKER_PORT
    volumes:
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql
      - ./db/backup/files/:/data_backup/data
    cap_add:
      - SYS_NICE
  mongodb:
    image: mongo
    container_name: mongo-server
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: localpayment_db
    ports:
      - $MONGO_LOCAL_PORT:$MONGO_LOCAL_PORT
    command: mongod --port $MONGO_LOCAL_PORT --auth
    volumes:
      - mongodb:/data/db
      - mongodb:/data/configdb
  mongo-express:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo-server
      ME_CONFIG_MONGODB_PORT: $MONGO_LOCAL_PORT
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_ROOT_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_ROOT_PASSWORD
      ME_CONFIG_BASICAUTH_USERNAME: $MONGO_ROOT_USER
      ME_CONFIG_BASICAUTH_PASSWORD: $MONGO_ROOT_PASSWORD
    depends_on:
      - mongodb
    ports:
      - $MONGO_DOCKER_PORT:$MONGO_DOCKER_PORT
  localpayment-node-app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    image: node
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    volumes:
      - ./app:/app
      - /app/node_modules
    depends_on:
      - mysqldb
    links:
      - localpayment-python-app
    stdin_open: true
    tty: true
  localpayment-python-app:
    build:
      context: .
      dockerfile: ./src/Dockerfile
    image: python
    env_file: ./.env
    ports:
      - $PYTHON_LOCAL_PORT:$PYTHON_DOCKER_PORT
    volumes:
      - ./src:/src
    depends_on:
      - mongo-express
    stdin_open: true
    tty: true
volumes:
  mongodb:
  db-config:
  db-data:
